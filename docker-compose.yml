# docker-compose.yml
version: '3'
services:
  # The Application
  app:
    build:
      context: ./php
      dockerfile: Dockerfile
    working_dir: /var/www/laravel
    volumes:
      - ../laravel:/var/www/laravel
    container_name: my-app
    user: 1000:1000
    environment:
      # laravel uses Dotenv to set and load environment variables,by default it will not
      # overwrite existing environment variables. So we set env variables for app container here
      # then laravel will use these env values instead of the same env variables  defined in .env file.
      - "DB_PORT=5432"
      - "DB_HOST=database"

  # The Nginx Server
  nginx:
    image: nginx:alpine
    working_dir: /var/www
    container_name: my-nginx
    volumes:
      # 基本 conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # dev 用的
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      # https 用的
      # - ./nginx/https.conf:/etc/nginx/conf.d/default.conf
      # ssl
      # - /etc/letsencrypt/live/kawa.homes/fullchain.pem:/var/www/certbot/fullchain.pem
      # - /etc/letsencrypt/live/kawa.homes/privkey.pem:/var/www/certbot/privkey.pem
      # go
      - ./nginx/go.conf:/etc/nginx/conf.d/go.conf
    volumes_from:
      - app
    ports:
      - 80:80
      - 443:443

  # go
  golang:
    build:
      context: ./golang
      dockerfile: Dockerfile
    container_name: my-go
    ports:
      - 9090:9090

  # The Database
  database:
    image: postgres:latest
    container_name: my-pgsql
    volumes:
      - ../dbdata:/var/lib/postgresql/data
    environment:
      - "PGDATA=/var/lib/postgresql/data/pgdata"
      - "POSTGRES_DB=kawa"
      - "POSTGRES_USER=kawa"
      - "POSTGRES_PASSWORD=kawa"
    ports:
        - "5432:5432"

volumes:
  dbdata: