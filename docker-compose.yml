# docker-compose.yml
version: '3'
services:
  # The Application
  app:
    build:
      args:
        user: kawa
        uid: 1000
      context: ./php
      dockerfile: Dockerfile
    working_dir: /var/www/laravel
    volumes:
      - ../laravel:/var/www/laravel
      - ./php/php.ini-development-10M:/usr/local/etc/php/conf.d/php-development-10M.ini
    container_name: my-app
    command:
      - /bin/sh
      - -c
      - |
        php artisan schedule:work &
        php-fpm
    stop_grace_period: 2s
    environment:
      - "DB_PORT=5432"
      - "DB_HOST=database"

  # The Nginx Server
  nginx:
    image: nginx:alpine
    working_dir: /var/www
    container_name: my-nginx
    volumes:
      # 基本 conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    volumes_from:
      - app
    ports:
      - 80:80
      - 443:443

  # The Database
  database:
    image: postgres:17-alpine
    container_name: my-pgsql
    volumes:
      - ../dbdata:/var/lib/postgresql/data
    environment:
      - "PGDATA=/var/lib/postgresql/data/pgdata"
      - "POSTGRES_DB=kawa"
      - "POSTGRES_USER=kawa"
      - "POSTGRES_PASSWORD=kawa"
      - "PGUSER=kawa"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "kawa", "-U", "kawa"]
      interval: 1s
      timeout: 10s
      retries: 5
      start_period: 80s

  # rust sqlx cli migrate tool
  sqlx-cli:
    restart: "no"
    build:
      context: ./sqlx-cli
      dockerfile: Dockerfile
    working_dir: /app
    container_name: sqlx-cli
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./sqlx-cli/.env:/app/.env
      - ./sqlx-cli/migrations:/app/migrations
    depends_on:
      database:
        condition: service_healthy

  # https://microsoft.github.io/garnet/docs/welcome/releases#docker
  garnet:
    image: 'ghcr.io/microsoft/garnet'
    ulimits:
      memlock: -1
    # ports:
    #   - "6379:6379"
    container_name: garnet

volumes:
  dbdata:
